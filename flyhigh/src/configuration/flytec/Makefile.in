# Makefile.in generated by automake 1.6.3 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.3 $ 
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AS = @AS@
AUTODIRS = @AUTODIRS@
AWK = @AWK@
CC = @CC@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
ECHO = @ECHO@
EGREP = @EGREP@
F77 = @F77@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = @GMSGFMT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBBZ2 = @LIBBZ2@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBGEN = @LIBGEN@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = @LIBRESOLV@
LIBSHADOW = @LIBSHADOW@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBSSL = @LIBSSL@
LIBTIFF = @LIBTIFF@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_JASPER = @LIB_JASPER@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIO = @LIB_KIO@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_QTOPIA = @LIB_QTOPIA@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJC = @OBJC@
OBJCFLAGS = @OBJCFLAGS@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PERL = @PERL@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QTOPIA_INCLUDES = @QTOPIA_INCLUDES@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
RC = @RC@
SETUIDFLAGS = @SETUIDFLAGS@
SSL_INCLUDES = @SSL_INCLUDES@
SSL_LDFLAGS = @SSL_LDFLAGS@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMLLINT = @XMLLINT@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
jni_includes = @jni_includes@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
INCLUDES = -I$(top_srcdir)/src/common/container -I$(top_srcdir)/src/common/form \
	-I$(top_srcdir)/src/database -I$(top_srcdir)/src/database/flytec -I$(top_srcdir)/src/database/sql \
	-I$(top_srcdir)/src/images -I$(top_srcdir)/src/device -I$(top_srcdir)/src/device/flytec \
	$(all_includes)

#>- METASOURCES = AUTO
lib_LIBRARIES = libflytec.a
#>- libflytec_a_SOURCES = AcousticFrame.ui CorrFrame.ui DeviceFrame.ui DisplayFrame.ui FlyCalcFrame.ui GPSFrame.ui MemoryFrame.ui PolareFrame.ui UnitFrame.ui VarioFrame.ui VelocityFrame.ui VelocityFrameImpl.cpp VarioFrameImpl.cpp UnitFrameImpl.cpp PolareFrameImpl.cpp MemoryFrameImpl.cpp GPSFrameImpl.cpp FlyCalcFrameImpl.cpp DisplayFrameImpl.cpp CorrFrameImpl.cpp AcousticFrameImpl.cpp DeviceFrameImpl.cpp MainFrameImpl.cpp MainFrame.ui Frame.cpp IFlytecConfig.cpp
#>+ 1
libflytec_a_SOURCES=           VelocityFrameImpl.cpp VarioFrameImpl.cpp UnitFrameImpl.cpp PolareFrameImpl.cpp MemoryFrameImpl.cpp GPSFrameImpl.cpp FlyCalcFrameImpl.cpp DisplayFrameImpl.cpp CorrFrameImpl.cpp AcousticFrameImpl.cpp DeviceFrameImpl.cpp MainFrameImpl.cpp  Frame.cpp IFlytecConfig.cpp AcousticFrame.cpp CorrFrame.cpp DeviceFrame.cpp DisplayFrame.cpp FlyCalcFrame.cpp GPSFrame.cpp MemoryFrame.cpp PolareFrame.cpp UnitFrame.cpp VarioFrame.cpp VelocityFrame.cpp MainFrame.cpp

noinst_HEADERS = AcousticFrameImpl.h CorrFrameImpl.h DeviceFrameImpl.h DisplayFrameImpl.h FlyCalcFrameImpl.h Frame.h GPSFrameImpl.h MainFrameImpl.h MemoryFrameImpl.h PolareFrameImpl.h UnitFrameImpl.h VarioFrameImpl.h IFlytecConfig.h
subdir = src/configuration/flytec
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(lib_LIBRARIES)

libflytec_a_AR = $(AR) cru
libflytec_a_LIBADD =
am_libflytec_a_OBJECTS = VelocityFrameImpl.$(OBJEXT) \
	VarioFrameImpl.$(OBJEXT) UnitFrameImpl.$(OBJEXT) \
	PolareFrameImpl.$(OBJEXT) MemoryFrameImpl.$(OBJEXT) \
	GPSFrameImpl.$(OBJEXT) FlyCalcFrameImpl.$(OBJEXT) \
	DisplayFrameImpl.$(OBJEXT) CorrFrameImpl.$(OBJEXT) \
	AcousticFrameImpl.$(OBJEXT) DeviceFrameImpl.$(OBJEXT) \
	MainFrameImpl.$(OBJEXT) Frame.$(OBJEXT) IFlytecConfig.$(OBJEXT)
#>- libflytec_a_OBJECTS = $(am_libflytec_a_OBJECTS)
#>+ 10
libflytec_a_final_OBJECTS = libflytec_a.all_cpp.o 
libflytec_a_nofinal_OBJECTS = VelocityFrameImpl.$(OBJEXT) \
	VarioFrameImpl.$(OBJEXT) UnitFrameImpl.$(OBJEXT) \
	PolareFrameImpl.$(OBJEXT) MemoryFrameImpl.$(OBJEXT) \
	GPSFrameImpl.$(OBJEXT) FlyCalcFrameImpl.$(OBJEXT) \
	DisplayFrameImpl.$(OBJEXT) CorrFrameImpl.$(OBJEXT) \
	AcousticFrameImpl.$(OBJEXT) DeviceFrameImpl.$(OBJEXT) \
	MainFrameImpl.$(OBJEXT) Frame.$(OBJEXT) IFlytecConfig.$(OBJEXT) AcousticFrame.$(OBJEXT) CorrFrame.$(OBJEXT) DeviceFrame.$(OBJEXT) DisplayFrame.$(OBJEXT) FlyCalcFrame.$(OBJEXT) GPSFrame.$(OBJEXT) MemoryFrame.$(OBJEXT) PolareFrame.$(OBJEXT) UnitFrame.$(OBJEXT) VarioFrame.$(OBJEXT) VelocityFrame.$(OBJEXT) MainFrame.$(OBJEXT)
@KDE_USE_FINAL_FALSE@libflytec_a_OBJECTS = $(libflytec_a_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libflytec_a_OBJECTS = $(libflytec_a_final_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- @AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/AcousticFrameImpl.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/CorrFrameImpl.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/DeviceFrameImpl.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/DisplayFrameImpl.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/FlyCalcFrameImpl.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/Frame.Po ./$(DEPDIR)/GPSFrameImpl.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/IFlytecConfig.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/MainFrameImpl.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/MemoryFrameImpl.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/PolareFrameImpl.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/UnitFrameImpl.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/VarioFrameImpl.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/VelocityFrameImpl.Po
#>+ 26
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@DEP_FILES =  $(DEPDIR)/AcousticFrame.P $(DEPDIR)/CorrFrame.P $(DEPDIR)/DeviceFrame.P $(DEPDIR)/DisplayFrame.P $(DEPDIR)/FlyCalcFrame.P $(DEPDIR)/GPSFrame.P $(DEPDIR)/MemoryFrame.P $(DEPDIR)/PolareFrame.P $(DEPDIR)/UnitFrame.P $(DEPDIR)/VarioFrame.P $(DEPDIR)/VelocityFrame.P $(DEPDIR)/MainFrame.P  $(DEPDIR)/libflytec_a.all_cpp.P ./$(DEPDIR)/AcousticFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/CorrFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/DeviceFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/DisplayFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/FlyCalcFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/Frame.Po ./$(DEPDIR)/GPSFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/IFlytecConfig.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/MainFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/MemoryFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/PolareFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/UnitFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/VarioFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/VelocityFrameImpl.Po
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@DEP_FILES =  $(DEPDIR)/AcousticFrame.P $(DEPDIR)/CorrFrame.P $(DEPDIR)/DeviceFrame.P $(DEPDIR)/DisplayFrame.P $(DEPDIR)/FlyCalcFrame.P $(DEPDIR)/GPSFrame.P $(DEPDIR)/MemoryFrame.P $(DEPDIR)/PolareFrame.P $(DEPDIR)/UnitFrame.P $(DEPDIR)/VarioFrame.P $(DEPDIR)/VelocityFrame.P $(DEPDIR)/MainFrame.P ./$(DEPDIR)/AcousticFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/CorrFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/DeviceFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/DisplayFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/FlyCalcFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/Frame.Po ./$(DEPDIR)/GPSFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/IFlytecConfig.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/MainFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/MemoryFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/PolareFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/UnitFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/VarioFrameImpl.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/VelocityFrameImpl.Po
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
DIST_SOURCES = $(libflytec_a_SOURCES)
HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(libflytec_a_SOURCES)

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/configuration/flytec/Makefile
#>+ 3
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/configuration/flytec/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/configuration/flytec/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLIBRARIES_INSTALL = $(INSTALL_DATA)
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libdir)/$$p"; \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libflytec.a: $(libflytec_a_OBJECTS) $(libflytec_a_DEPENDENCIES) 
	-rm -f libflytec.a
	$(libflytec_a_AR) libflytec.a $(libflytec_a_OBJECTS) $(libflytec_a_LIBADD)
	$(RANLIB) libflytec.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AcousticFrameImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CorrFrameImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DeviceFrameImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DisplayFrameImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FlyCalcFrameImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Frame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GPSFrameImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IFlytecConfig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MainFrameImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MemoryFrameImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PolareFrameImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UnitFrameImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VarioFrameImpl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VelocityFrameImpl.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libLIBRARIES clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-generic clean-libLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-libLIBRARIES

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-info-am uninstall-libLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
UnitFrameImpl.moc: $(srcdir)/UnitFrameImpl.h
	$(MOC) $(srcdir)/UnitFrameImpl.h -o UnitFrameImpl.moc

#>+ 2
mocs: UnitFrameImpl.moc

#>+ 3
MemoryFrameImpl.moc: $(srcdir)/MemoryFrameImpl.h
	$(MOC) $(srcdir)/MemoryFrameImpl.h -o MemoryFrameImpl.moc

#>+ 2
mocs: MemoryFrameImpl.moc

#>+ 3
GPSFrameImpl.moc: $(srcdir)/GPSFrameImpl.h
	$(MOC) $(srcdir)/GPSFrameImpl.h -o GPSFrameImpl.moc

#>+ 2
mocs: GPSFrameImpl.moc

#>+ 3
CorrFrameImpl.moc: $(srcdir)/CorrFrameImpl.h
	$(MOC) $(srcdir)/CorrFrameImpl.h -o CorrFrameImpl.moc

#>+ 2
mocs: CorrFrameImpl.moc

#>+ 3
VelocityFrameImpl.moc: $(srcdir)/VelocityFrameImpl.h
	$(MOC) $(srcdir)/VelocityFrameImpl.h -o VelocityFrameImpl.moc

#>+ 2
mocs: VelocityFrameImpl.moc

#>+ 3
VarioFrameImpl.moc: $(srcdir)/VarioFrameImpl.h
	$(MOC) $(srcdir)/VarioFrameImpl.h -o VarioFrameImpl.moc

#>+ 2
mocs: VarioFrameImpl.moc

#>+ 3
DisplayFrameImpl.moc: $(srcdir)/DisplayFrameImpl.h
	$(MOC) $(srcdir)/DisplayFrameImpl.h -o DisplayFrameImpl.moc

#>+ 2
mocs: DisplayFrameImpl.moc

#>+ 3
FlyCalcFrameImpl.moc: $(srcdir)/FlyCalcFrameImpl.h
	$(MOC) $(srcdir)/FlyCalcFrameImpl.h -o FlyCalcFrameImpl.moc

#>+ 2
mocs: FlyCalcFrameImpl.moc

#>+ 3
MainFrameImpl.moc: $(srcdir)/MainFrameImpl.h
	$(MOC) $(srcdir)/MainFrameImpl.h -o MainFrameImpl.moc

#>+ 2
mocs: MainFrameImpl.moc

#>+ 3
AcousticFrameImpl.moc: $(srcdir)/AcousticFrameImpl.h
	$(MOC) $(srcdir)/AcousticFrameImpl.h -o AcousticFrameImpl.moc

#>+ 2
mocs: AcousticFrameImpl.moc

#>+ 3
DeviceFrameImpl.moc: $(srcdir)/DeviceFrameImpl.h
	$(MOC) $(srcdir)/DeviceFrameImpl.h -o DeviceFrameImpl.moc

#>+ 2
mocs: DeviceFrameImpl.moc

#>+ 3
PolareFrameImpl.moc: $(srcdir)/PolareFrameImpl.h
	$(MOC) $(srcdir)/PolareFrameImpl.h -o PolareFrameImpl.moc

#>+ 2
mocs: PolareFrameImpl.moc

#>+ 3
clean-metasources:
	-rm -f  UnitFrameImpl.moc MemoryFrameImpl.moc GPSFrameImpl.moc CorrFrameImpl.moc VelocityFrameImpl.moc VarioFrameImpl.moc DisplayFrameImpl.moc FlyCalcFrameImpl.moc MainFrameImpl.moc AcousticFrameImpl.moc DeviceFrameImpl.moc PolareFrameImpl.moc

#>+ 2
KDE_DIST=PolareFrame.ui UnitFrame.ui VelocityFrameImpl.h MainFrame.ui FlyCalcFrame.ui GPSFrame.ui VelocityFrame.ui DeviceFrame.ui AcousticFrame.ui DisplayFrame.ui VarioFrame.ui CorrFrame.ui MemoryFrame.ui 

#>+ 15
clean-ui:
	-rm -f \
	AcousticFrame.cpp AcousticFrame.h AcousticFrame.moc \
	CorrFrame.cpp CorrFrame.h CorrFrame.moc \
	DeviceFrame.cpp DeviceFrame.h DeviceFrame.moc \
	DisplayFrame.cpp DisplayFrame.h DisplayFrame.moc \
	FlyCalcFrame.cpp FlyCalcFrame.h FlyCalcFrame.moc \
	GPSFrame.cpp GPSFrame.h GPSFrame.moc \
	MemoryFrame.cpp MemoryFrame.h MemoryFrame.moc \
	PolareFrame.cpp PolareFrame.h PolareFrame.moc \
	UnitFrame.cpp UnitFrame.h UnitFrame.moc \
	VarioFrame.cpp VarioFrame.h VarioFrame.moc \
	VelocityFrame.cpp VelocityFrame.h VelocityFrame.moc \
	MainFrame.cpp MainFrame.h MainFrame.moc 

#>+ 2
docs-am:

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/configuration/flytec/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/configuration/flytec/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-am

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libflytec_a.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/VelocityFrameImpl.cpp $(srcdir)/VarioFrameImpl.cpp $(srcdir)/UnitFrameImpl.cpp $(srcdir)/PolareFrameImpl.cpp $(srcdir)/MemoryFrameImpl.cpp $(srcdir)/GPSFrameImpl.cpp $(srcdir)/FlyCalcFrameImpl.cpp $(srcdir)/DisplayFrameImpl.cpp $(srcdir)/CorrFrameImpl.cpp $(srcdir)/AcousticFrameImpl.cpp $(srcdir)/DeviceFrameImpl.cpp $(srcdir)/MainFrameImpl.cpp $(srcdir)/Frame.cpp $(srcdir)/IFlytecConfig.cpp AcousticFrame.cpp CorrFrame.cpp DeviceFrame.cpp DisplayFrame.cpp FlyCalcFrame.cpp GPSFrame.cpp MemoryFrame.cpp PolareFrame.cpp UnitFrame.cpp VarioFrame.cpp VelocityFrame.cpp MainFrame.cpp  MemoryFrameImpl.moc VelocityFrame.moc GPSFrameImpl.moc MainFrame.moc GPSFrame.moc VarioFrameImpl.moc VelocityFrameImpl.moc AcousticFrame.moc MemoryFrame.moc FlyCalcFrameImpl.moc PolareFrame.moc AcousticFrameImpl.moc CorrFrame.moc PolareFrameImpl.moc DeviceFrameImpl.moc UnitFrameImpl.moc CorrFrameImpl.moc VarioFrame.moc DisplayFrameImpl.moc MainFrameImpl.moc FlyCalcFrame.moc DisplayFrame.moc DeviceFrame.moc UnitFrame.moc
	@echo 'creating libflytec_a.all_cpp.cpp ...'; \
	rm -f libflytec_a.all_cpp.files libflytec_a.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libflytec_a.all_cpp.final; \
	for file in VelocityFrameImpl.cpp VarioFrameImpl.cpp UnitFrameImpl.cpp PolareFrameImpl.cpp MemoryFrameImpl.cpp GPSFrameImpl.cpp FlyCalcFrameImpl.cpp DisplayFrameImpl.cpp CorrFrameImpl.cpp AcousticFrameImpl.cpp DeviceFrameImpl.cpp MainFrameImpl.cpp Frame.cpp IFlytecConfig.cpp AcousticFrame.cpp CorrFrame.cpp DeviceFrame.cpp DisplayFrame.cpp FlyCalcFrame.cpp GPSFrame.cpp MemoryFrame.cpp PolareFrame.cpp UnitFrame.cpp VarioFrame.cpp VelocityFrame.cpp MainFrame.cpp ; do \
	  echo "#include \"$$file\"" >> libflytec_a.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libflytec_a.all_cpp.final; \
	done; \
	cat libflytec_a.all_cpp.final libflytec_a.all_cpp.files > libflytec_a.all_cpp.cpp; \
	rm -f libflytec_a.all_cpp.final libflytec_a.all_cpp.files

#>+ 3
clean-final:
	-rm -f libflytec_a.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libflytec_a_OBJECTS="$(libflytec_a_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libflytec_a_OBJECTS="$(libflytec_a_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libflytec_a_OBJECTS="$(libflytec_a_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libflytec_a_OBJECTS="$(libflytec_a_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 41
$(srcdir)/AcousticFrameImpl.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
$(srcdir)/MemoryFrameImpl.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
$(srcdir)/UnitFrameImpl.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
$(srcdir)/PolareFrameImpl.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
MemoryFrameImpl.lo: MemoryFrameImpl.moc 
DeviceFrameImpl.lo: DeviceFrameImpl.moc 
DisplayFrameImpl.o: DisplayFrameImpl.moc 
PolareFrameImpl.o: PolareFrameImpl.moc 
FlyCalcFrameImpl.o: FlyCalcFrameImpl.moc 
$(srcdir)/GPSFrameImpl.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
AcousticFrameImpl.o: AcousticFrameImpl.moc 
GPSFrameImpl.lo: GPSFrameImpl.moc 
nmcheck-am: nmcheck
PolareFrameImpl.lo: PolareFrameImpl.moc 
UnitFrameImpl.o: UnitFrameImpl.moc 
VelocityFrameImpl.lo: VelocityFrameImpl.moc 
GPSFrameImpl.o: GPSFrameImpl.moc 
$(srcdir)/VarioFrameImpl.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
$(srcdir)/CorrFrameImpl.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
VelocityFrameImpl.o: VelocityFrameImpl.moc 
$(srcdir)/DeviceFrameImpl.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
$(srcdir)/FlyCalcFrameImpl.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
$(srcdir)/MainFrameImpl.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
AcousticFrameImpl.lo: AcousticFrameImpl.moc 
VarioFrameImpl.lo: VarioFrameImpl.moc 
CorrFrameImpl.o: CorrFrameImpl.moc 
MainFrameImpl.o: MainFrameImpl.moc 
nmcheck: 
DisplayFrameImpl.lo: DisplayFrameImpl.moc 
FlyCalcFrameImpl.lo: FlyCalcFrameImpl.moc 
DeviceFrameImpl.o: DeviceFrameImpl.moc 
$(srcdir)/IFlytecConfig.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
MemoryFrameImpl.o: MemoryFrameImpl.moc 
CorrFrameImpl.lo: CorrFrameImpl.moc 
MainFrameImpl.lo: MainFrameImpl.moc 
VarioFrameImpl.o: VarioFrameImpl.moc 
UnitFrameImpl.lo: UnitFrameImpl.moc 
$(srcdir)/VelocityFrameImpl.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
$(srcdir)/DisplayFrameImpl.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 
$(srcdir)/Frame.cpp: AcousticFrame.h CorrFrame.h DeviceFrame.h DisplayFrame.h FlyCalcFrame.h GPSFrame.h MemoryFrame.h PolareFrame.h UnitFrame.h VarioFrame.h VelocityFrame.h MainFrame.h 

#>+ 168
MainFrame.cpp: $(srcdir)/MainFrame.ui MainFrame.h MainFrame.moc
	rm -f MainFrame.cpp
	echo '#include <klocale.h>' > MainFrame.cpp
	$(UIC) -tr ${UIC_TR} -i MainFrame.h $(srcdir)/MainFrame.ui > MainFrame.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" MainFrame.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_MainFrame,g" >> MainFrame.cpp ;\
	rm -f MainFrame.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "MainFrame.moc"' >> MainFrame.cpp; else rm -f MainFrame.cpp ; exit $$ret ; fi

MainFrame.h: $(srcdir)/MainFrame.ui
	$(UIC) -o MainFrame.h $(srcdir)/MainFrame.ui

MainFrame.moc: MainFrame.h
	$(MOC) MainFrame.h -o MainFrame.moc

VelocityFrame.cpp: $(srcdir)/VelocityFrame.ui VelocityFrame.h VelocityFrame.moc
	rm -f VelocityFrame.cpp
	echo '#include <klocale.h>' > VelocityFrame.cpp
	$(UIC) -tr ${UIC_TR} -i VelocityFrame.h $(srcdir)/VelocityFrame.ui > VelocityFrame.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" VelocityFrame.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_VelocityFrame,g" >> VelocityFrame.cpp ;\
	rm -f VelocityFrame.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "VelocityFrame.moc"' >> VelocityFrame.cpp; else rm -f VelocityFrame.cpp ; exit $$ret ; fi

VelocityFrame.h: $(srcdir)/VelocityFrame.ui
	$(UIC) -o VelocityFrame.h $(srcdir)/VelocityFrame.ui

VelocityFrame.moc: VelocityFrame.h
	$(MOC) VelocityFrame.h -o VelocityFrame.moc

FlyCalcFrame.cpp: $(srcdir)/FlyCalcFrame.ui FlyCalcFrame.h FlyCalcFrame.moc
	rm -f FlyCalcFrame.cpp
	echo '#include <klocale.h>' > FlyCalcFrame.cpp
	$(UIC) -tr ${UIC_TR} -i FlyCalcFrame.h $(srcdir)/FlyCalcFrame.ui > FlyCalcFrame.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" FlyCalcFrame.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_FlyCalcFrame,g" >> FlyCalcFrame.cpp ;\
	rm -f FlyCalcFrame.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "FlyCalcFrame.moc"' >> FlyCalcFrame.cpp; else rm -f FlyCalcFrame.cpp ; exit $$ret ; fi

FlyCalcFrame.h: $(srcdir)/FlyCalcFrame.ui
	$(UIC) -o FlyCalcFrame.h $(srcdir)/FlyCalcFrame.ui

FlyCalcFrame.moc: FlyCalcFrame.h
	$(MOC) FlyCalcFrame.h -o FlyCalcFrame.moc

CorrFrame.cpp: $(srcdir)/CorrFrame.ui CorrFrame.h CorrFrame.moc
	rm -f CorrFrame.cpp
	echo '#include <klocale.h>' > CorrFrame.cpp
	$(UIC) -tr ${UIC_TR} -i CorrFrame.h $(srcdir)/CorrFrame.ui > CorrFrame.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" CorrFrame.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_CorrFrame,g" >> CorrFrame.cpp ;\
	rm -f CorrFrame.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "CorrFrame.moc"' >> CorrFrame.cpp; else rm -f CorrFrame.cpp ; exit $$ret ; fi

CorrFrame.h: $(srcdir)/CorrFrame.ui
	$(UIC) -o CorrFrame.h $(srcdir)/CorrFrame.ui

CorrFrame.moc: CorrFrame.h
	$(MOC) CorrFrame.h -o CorrFrame.moc

DisplayFrame.cpp: $(srcdir)/DisplayFrame.ui DisplayFrame.h DisplayFrame.moc
	rm -f DisplayFrame.cpp
	echo '#include <klocale.h>' > DisplayFrame.cpp
	$(UIC) -tr ${UIC_TR} -i DisplayFrame.h $(srcdir)/DisplayFrame.ui > DisplayFrame.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" DisplayFrame.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_DisplayFrame,g" >> DisplayFrame.cpp ;\
	rm -f DisplayFrame.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "DisplayFrame.moc"' >> DisplayFrame.cpp; else rm -f DisplayFrame.cpp ; exit $$ret ; fi

DisplayFrame.h: $(srcdir)/DisplayFrame.ui
	$(UIC) -o DisplayFrame.h $(srcdir)/DisplayFrame.ui

DisplayFrame.moc: DisplayFrame.h
	$(MOC) DisplayFrame.h -o DisplayFrame.moc

DeviceFrame.cpp: $(srcdir)/DeviceFrame.ui DeviceFrame.h DeviceFrame.moc
	rm -f DeviceFrame.cpp
	echo '#include <klocale.h>' > DeviceFrame.cpp
	$(UIC) -tr ${UIC_TR} -i DeviceFrame.h $(srcdir)/DeviceFrame.ui > DeviceFrame.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" DeviceFrame.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_DeviceFrame,g" >> DeviceFrame.cpp ;\
	rm -f DeviceFrame.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "DeviceFrame.moc"' >> DeviceFrame.cpp; else rm -f DeviceFrame.cpp ; exit $$ret ; fi

DeviceFrame.h: $(srcdir)/DeviceFrame.ui
	$(UIC) -o DeviceFrame.h $(srcdir)/DeviceFrame.ui

DeviceFrame.moc: DeviceFrame.h
	$(MOC) DeviceFrame.h -o DeviceFrame.moc

PolareFrame.cpp: $(srcdir)/PolareFrame.ui PolareFrame.h PolareFrame.moc
	rm -f PolareFrame.cpp
	echo '#include <klocale.h>' > PolareFrame.cpp
	$(UIC) -tr ${UIC_TR} -i PolareFrame.h $(srcdir)/PolareFrame.ui > PolareFrame.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" PolareFrame.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_PolareFrame,g" >> PolareFrame.cpp ;\
	rm -f PolareFrame.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "PolareFrame.moc"' >> PolareFrame.cpp; else rm -f PolareFrame.cpp ; exit $$ret ; fi

PolareFrame.h: $(srcdir)/PolareFrame.ui
	$(UIC) -o PolareFrame.h $(srcdir)/PolareFrame.ui

PolareFrame.moc: PolareFrame.h
	$(MOC) PolareFrame.h -o PolareFrame.moc

UnitFrame.cpp: $(srcdir)/UnitFrame.ui UnitFrame.h UnitFrame.moc
	rm -f UnitFrame.cpp
	echo '#include <klocale.h>' > UnitFrame.cpp
	$(UIC) -tr ${UIC_TR} -i UnitFrame.h $(srcdir)/UnitFrame.ui > UnitFrame.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" UnitFrame.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_UnitFrame,g" >> UnitFrame.cpp ;\
	rm -f UnitFrame.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "UnitFrame.moc"' >> UnitFrame.cpp; else rm -f UnitFrame.cpp ; exit $$ret ; fi

UnitFrame.h: $(srcdir)/UnitFrame.ui
	$(UIC) -o UnitFrame.h $(srcdir)/UnitFrame.ui

UnitFrame.moc: UnitFrame.h
	$(MOC) UnitFrame.h -o UnitFrame.moc

AcousticFrame.cpp: $(srcdir)/AcousticFrame.ui AcousticFrame.h AcousticFrame.moc
	rm -f AcousticFrame.cpp
	echo '#include <klocale.h>' > AcousticFrame.cpp
	$(UIC) -tr ${UIC_TR} -i AcousticFrame.h $(srcdir)/AcousticFrame.ui > AcousticFrame.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" AcousticFrame.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_AcousticFrame,g" >> AcousticFrame.cpp ;\
	rm -f AcousticFrame.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "AcousticFrame.moc"' >> AcousticFrame.cpp; else rm -f AcousticFrame.cpp ; exit $$ret ; fi

AcousticFrame.h: $(srcdir)/AcousticFrame.ui
	$(UIC) -o AcousticFrame.h $(srcdir)/AcousticFrame.ui

AcousticFrame.moc: AcousticFrame.h
	$(MOC) AcousticFrame.h -o AcousticFrame.moc

VarioFrame.cpp: $(srcdir)/VarioFrame.ui VarioFrame.h VarioFrame.moc
	rm -f VarioFrame.cpp
	echo '#include <klocale.h>' > VarioFrame.cpp
	$(UIC) -tr ${UIC_TR} -i VarioFrame.h $(srcdir)/VarioFrame.ui > VarioFrame.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" VarioFrame.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_VarioFrame,g" >> VarioFrame.cpp ;\
	rm -f VarioFrame.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "VarioFrame.moc"' >> VarioFrame.cpp; else rm -f VarioFrame.cpp ; exit $$ret ; fi

VarioFrame.h: $(srcdir)/VarioFrame.ui
	$(UIC) -o VarioFrame.h $(srcdir)/VarioFrame.ui

VarioFrame.moc: VarioFrame.h
	$(MOC) VarioFrame.h -o VarioFrame.moc

MemoryFrame.cpp: $(srcdir)/MemoryFrame.ui MemoryFrame.h MemoryFrame.moc
	rm -f MemoryFrame.cpp
	echo '#include <klocale.h>' > MemoryFrame.cpp
	$(UIC) -tr ${UIC_TR} -i MemoryFrame.h $(srcdir)/MemoryFrame.ui > MemoryFrame.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" MemoryFrame.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_MemoryFrame,g" >> MemoryFrame.cpp ;\
	rm -f MemoryFrame.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "MemoryFrame.moc"' >> MemoryFrame.cpp; else rm -f MemoryFrame.cpp ; exit $$ret ; fi

MemoryFrame.h: $(srcdir)/MemoryFrame.ui
	$(UIC) -o MemoryFrame.h $(srcdir)/MemoryFrame.ui

MemoryFrame.moc: MemoryFrame.h
	$(MOC) MemoryFrame.h -o MemoryFrame.moc

GPSFrame.cpp: $(srcdir)/GPSFrame.ui GPSFrame.h GPSFrame.moc
	rm -f GPSFrame.cpp
	echo '#include <klocale.h>' > GPSFrame.cpp
	$(UIC) -tr ${UIC_TR} -i GPSFrame.h $(srcdir)/GPSFrame.ui > GPSFrame.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" GPSFrame.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_GPSFrame,g" >> GPSFrame.cpp ;\
	rm -f GPSFrame.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "GPSFrame.moc"' >> GPSFrame.cpp; else rm -f GPSFrame.cpp ; exit $$ret ; fi

GPSFrame.h: $(srcdir)/GPSFrame.ui
	$(UIC) -o GPSFrame.h $(srcdir)/GPSFrame.ui

GPSFrame.moc: GPSFrame.h
	$(MOC) GPSFrame.h -o GPSFrame.moc
